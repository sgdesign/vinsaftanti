// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.saeedsoft.security.engine;

import com.saeedsoft.security.db.dao.BlackListDAO;
import com.saeedsoft.security.db.dao.ContactDAO;
import com.saeedsoft.security.service.BlackListWrapper;
import com.saeedsoft.security.service.NormalizerService;
import com.saeedsoft.security.service.ValidatorService;
import com.saeedsoft.security.stuff.AppPreferences;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideBlackListWrapperFactory implements Factory<BlackListWrapper> {
  private final AppModule module;

  private final Provider<ValidatorService> validatorServiceProvider;

  private final Provider<NormalizerService> normalizerServiceProvider;

  private final Provider<ContactDAO> contactDAOProvider;

  private final Provider<BlackListDAO> blackListDAOProvider;

  private final Provider<AppPreferences> appPreferencesProvider;

  public AppModule_ProvideBlackListWrapperFactory(
      AppModule module,
      Provider<ValidatorService> validatorServiceProvider,
      Provider<NormalizerService> normalizerServiceProvider,
      Provider<ContactDAO> contactDAOProvider,
      Provider<BlackListDAO> blackListDAOProvider,
      Provider<AppPreferences> appPreferencesProvider) {
    assert module != null;
    this.module = module;
    assert validatorServiceProvider != null;
    this.validatorServiceProvider = validatorServiceProvider;
    assert normalizerServiceProvider != null;
    this.normalizerServiceProvider = normalizerServiceProvider;
    assert contactDAOProvider != null;
    this.contactDAOProvider = contactDAOProvider;
    assert blackListDAOProvider != null;
    this.blackListDAOProvider = blackListDAOProvider;
    assert appPreferencesProvider != null;
    this.appPreferencesProvider = appPreferencesProvider;
  }

  @Override
  public BlackListWrapper get() {
    return Preconditions.checkNotNull(
        module.provideBlackListWrapper(
            validatorServiceProvider.get(),
            normalizerServiceProvider.get(),
            contactDAOProvider.get(),
            blackListDAOProvider.get(),
            appPreferencesProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<BlackListWrapper> create(
      AppModule module,
      Provider<ValidatorService> validatorServiceProvider,
      Provider<NormalizerService> normalizerServiceProvider,
      Provider<ContactDAO> contactDAOProvider,
      Provider<BlackListDAO> blackListDAOProvider,
      Provider<AppPreferences> appPreferencesProvider) {
    return new AppModule_ProvideBlackListWrapperFactory(
        module,
        validatorServiceProvider,
        normalizerServiceProvider,
        contactDAOProvider,
        blackListDAOProvider,
        appPreferencesProvider);
  }
}
