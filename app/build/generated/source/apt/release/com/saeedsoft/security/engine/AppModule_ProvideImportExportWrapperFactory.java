// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.saeedsoft.security.engine;

import com.saeedsoft.security.service.BlackListWrapper;
import com.saeedsoft.security.service.ImportExportWrapper;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideImportExportWrapperFactory
    implements Factory<ImportExportWrapper> {
  private final AppModule module;

  private final Provider<BlackListWrapper> blackListWrapperProvider;

  public AppModule_ProvideImportExportWrapperFactory(
      AppModule module, Provider<BlackListWrapper> blackListWrapperProvider) {
    assert module != null;
    this.module = module;
    assert blackListWrapperProvider != null;
    this.blackListWrapperProvider = blackListWrapperProvider;
  }

  @Override
  public ImportExportWrapper get() {
    return Preconditions.checkNotNull(
        module.provideImportExportWrapper(blackListWrapperProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<ImportExportWrapper> create(
      AppModule module, Provider<BlackListWrapper> blackListWrapperProvider) {
    return new AppModule_ProvideImportExportWrapperFactory(module, blackListWrapperProvider);
  }
}
