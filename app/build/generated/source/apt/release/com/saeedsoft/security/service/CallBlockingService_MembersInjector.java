// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.saeedsoft.security.service;

import dagger.MembersInjector;
import javax.inject.Provider;

public final class CallBlockingService_MembersInjector
    implements MembersInjector<CallBlockingService> {
  private final Provider<BlockWrapper> blockWrapperProvider;

  public CallBlockingService_MembersInjector(Provider<BlockWrapper> blockWrapperProvider) {
    assert blockWrapperProvider != null;
    this.blockWrapperProvider = blockWrapperProvider;
  }

  public static MembersInjector<CallBlockingService> create(
      Provider<BlockWrapper> blockWrapperProvider) {
    return new CallBlockingService_MembersInjector(blockWrapperProvider);
  }

  @Override
  public void injectMembers(CallBlockingService instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.blockWrapper = blockWrapperProvider.get();
  }

  public static void injectBlockWrapper(
      CallBlockingService instance, Provider<BlockWrapper> blockWrapperProvider) {
    instance.blockWrapper = blockWrapperProvider.get();
  }
}
