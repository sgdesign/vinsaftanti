// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.saeedsoft.security.engine;

import com.saeedsoft.security.service.BlackListChecker;
import com.saeedsoft.security.service.ContactChecker;
import com.saeedsoft.security.service.MasterChecker;
import com.saeedsoft.security.service.PrivateNumberChecker;
import com.saeedsoft.security.service.QuickBlackListChecker;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class BlockModule_ProvidesMasterCheckerFactory implements Factory<MasterChecker> {
  private final BlockModule module;

  private final Provider<PrivateNumberChecker> privateNumberCheckerProvider;

  private final Provider<QuickBlackListChecker> quickBlackListCheckerProvider;

  private final Provider<BlackListChecker> blackListCheckerProvider;

  private final Provider<ContactChecker> contactCheckerProvider;

  public BlockModule_ProvidesMasterCheckerFactory(
      BlockModule module,
      Provider<PrivateNumberChecker> privateNumberCheckerProvider,
      Provider<QuickBlackListChecker> quickBlackListCheckerProvider,
      Provider<BlackListChecker> blackListCheckerProvider,
      Provider<ContactChecker> contactCheckerProvider) {
    assert module != null;
    this.module = module;
    assert privateNumberCheckerProvider != null;
    this.privateNumberCheckerProvider = privateNumberCheckerProvider;
    assert quickBlackListCheckerProvider != null;
    this.quickBlackListCheckerProvider = quickBlackListCheckerProvider;
    assert blackListCheckerProvider != null;
    this.blackListCheckerProvider = blackListCheckerProvider;
    assert contactCheckerProvider != null;
    this.contactCheckerProvider = contactCheckerProvider;
  }

  @Override
  public MasterChecker get() {
    return Preconditions.checkNotNull(
        module.providesMasterChecker(
            privateNumberCheckerProvider.get(),
            quickBlackListCheckerProvider.get(),
            blackListCheckerProvider.get(),
            contactCheckerProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<MasterChecker> create(
      BlockModule module,
      Provider<PrivateNumberChecker> privateNumberCheckerProvider,
      Provider<QuickBlackListChecker> quickBlackListCheckerProvider,
      Provider<BlackListChecker> blackListCheckerProvider,
      Provider<ContactChecker> contactCheckerProvider) {
    return new BlockModule_ProvidesMasterCheckerFactory(
        module,
        privateNumberCheckerProvider,
        quickBlackListCheckerProvider,
        blackListCheckerProvider,
        contactCheckerProvider);
  }
}
